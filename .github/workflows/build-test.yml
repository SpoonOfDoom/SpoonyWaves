name: Build Test (No Release)

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, develop, feature/* ]

jobs:
  build-test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install UV package manager
      uses: astral-sh/setup-uv@v4
      
    - name: Install dependencies
      run: uv sync
      
    - name: Install Inno Setup
      run: |
        $url = "https://jrsoftware.org/download.php/is.exe"
        $output = "$env:TEMP\innosetup.exe"
        Invoke-WebRequest -Uri $url -OutFile $output
        Start-Process -FilePath $output -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
        # Add Inno Setup to PATH
        $innoPath = "${env:ProgramFiles(x86)}\Inno Setup 6"
        echo "$innoPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: powershell
      
    - name: Get version from pyproject.toml
      id: get_version
      run: |
        $content = Get-Content -Path "pyproject.toml" -Raw
        if ($content -match 'version = "([^"]+)"') {
          $version = $matches[1]
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Found version: $version"
        } else {
          echo "Could not extract version from pyproject.toml"
          exit 1
        }
      shell: powershell
      
    - name: Clean previous builds
      run: |
        if (Test-Path "dist") { Remove-Item -Recurse -Force "dist" }
        if (Test-Path "build") { Remove-Item -Recurse -Force "build" }
      shell: powershell
      
    - name: Build executable with PyInstaller
      run: uv run pyinstaller spoonywaves.spec
      
    - name: Verify executable was created
      run: |
        if (-not (Test-Path "dist\SpoonyWaves.exe")) {
          echo "ERROR: Executable was not created!"
          exit 1
        }
        $fileInfo = Get-Item "dist\SpoonyWaves.exe"
        echo "Executable created successfully - Size: $($fileInfo.Length) bytes"
      shell: powershell
      
    - name: Update InnoSetup script paths for GitHub Actions
      run: |
        $issContent = Get-Content "installer\InnoSetupScript.iss" -Raw
        # Replace absolute paths with relative paths
        $issContent = $issContent -replace 'C:\\Users\\chris\\Documents\\Projects\\Privat\\SpoonyWaves\\', '..\\'
        $issContent | Set-Content "installer\InnoSetupScript.iss"
      shell: powershell
      
    - name: Build installer with Inno Setup
      run: |
        cd installer
        iscc InnoSetupScript.iss
        if (-not (Test-Path "Output\SpoonyWavesSetup.exe")) {
          echo "ERROR: Installer was not created!"
          exit 1
        }
        $fileInfo = Get-Item "Output\SpoonyWavesSetup.exe"
        echo "Installer created successfully - Size: $($fileInfo.Length) bytes"
      shell: powershell
      
    - name: Upload build artifacts for testing
      uses: actions/upload-artifact@v4
      with:
        name: build-test-artifacts-v${{ steps.get_version.outputs.version }}
        path: |
          dist/SpoonyWaves.exe
          installer/Output/SpoonyWavesSetup.exe
